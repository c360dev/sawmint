// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/faddat/sawmint/models"
)

// GetBatchStatusesOKCode is the HTTP code returned for type GetBatchStatusesOK
const GetBatchStatusesOKCode int = 200

/*GetBatchStatusesOK Successfully retrieved statuses

swagger:response getBatchStatusesOK
*/
type GetBatchStatusesOK struct {

	/*
	  In: Body
	*/
	Payload *GetBatchStatusesOKBody `json:"body,omitempty"`
}

// NewGetBatchStatusesOK creates GetBatchStatusesOK with default headers values
func NewGetBatchStatusesOK() *GetBatchStatusesOK {

	return &GetBatchStatusesOK{}
}

// WithPayload adds the payload to the get batch statuses o k response
func (o *GetBatchStatusesOK) WithPayload(payload *GetBatchStatusesOKBody) *GetBatchStatusesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get batch statuses o k response
func (o *GetBatchStatusesOK) SetPayload(payload *GetBatchStatusesOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBatchStatusesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetBatchStatusesBadRequestCode is the HTTP code returned for type GetBatchStatusesBadRequest
const GetBatchStatusesBadRequestCode int = 400

/*GetBatchStatusesBadRequest Request was malformed

swagger:response getBatchStatusesBadRequest
*/
type GetBatchStatusesBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetBatchStatusesBadRequest creates GetBatchStatusesBadRequest with default headers values
func NewGetBatchStatusesBadRequest() *GetBatchStatusesBadRequest {

	return &GetBatchStatusesBadRequest{}
}

// WithPayload adds the payload to the get batch statuses bad request response
func (o *GetBatchStatusesBadRequest) WithPayload(payload *models.Error) *GetBatchStatusesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get batch statuses bad request response
func (o *GetBatchStatusesBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBatchStatusesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetBatchStatusesInternalServerErrorCode is the HTTP code returned for type GetBatchStatusesInternalServerError
const GetBatchStatusesInternalServerErrorCode int = 500

/*GetBatchStatusesInternalServerError Something went wrong within the validator

swagger:response getBatchStatusesInternalServerError
*/
type GetBatchStatusesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetBatchStatusesInternalServerError creates GetBatchStatusesInternalServerError with default headers values
func NewGetBatchStatusesInternalServerError() *GetBatchStatusesInternalServerError {

	return &GetBatchStatusesInternalServerError{}
}

// WithPayload adds the payload to the get batch statuses internal server error response
func (o *GetBatchStatusesInternalServerError) WithPayload(payload *models.Error) *GetBatchStatusesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get batch statuses internal server error response
func (o *GetBatchStatusesInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBatchStatusesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetBatchStatusesServiceUnavailableCode is the HTTP code returned for type GetBatchStatusesServiceUnavailable
const GetBatchStatusesServiceUnavailableCode int = 503

/*GetBatchStatusesServiceUnavailable API is unable to reach the validator

swagger:response getBatchStatusesServiceUnavailable
*/
type GetBatchStatusesServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetBatchStatusesServiceUnavailable creates GetBatchStatusesServiceUnavailable with default headers values
func NewGetBatchStatusesServiceUnavailable() *GetBatchStatusesServiceUnavailable {

	return &GetBatchStatusesServiceUnavailable{}
}

// WithPayload adds the payload to the get batch statuses service unavailable response
func (o *GetBatchStatusesServiceUnavailable) WithPayload(payload *models.Error) *GetBatchStatusesServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get batch statuses service unavailable response
func (o *GetBatchStatusesServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBatchStatusesServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
