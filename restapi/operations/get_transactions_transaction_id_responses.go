// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/c360dev/sawmint/models"
)

// GetTransactionsTransactionIDOKCode is the HTTP code returned for type GetTransactionsTransactionIDOK
const GetTransactionsTransactionIDOKCode int = 200

/*GetTransactionsTransactionIDOK Successfully retrieved transaction

swagger:response getTransactionsTransactionIdOK
*/
type GetTransactionsTransactionIDOK struct {

	/*
	  In: Body
	*/
	Payload *GetTransactionsTransactionIDOKBody `json:"body,omitempty"`
}

// NewGetTransactionsTransactionIDOK creates GetTransactionsTransactionIDOK with default headers values
func NewGetTransactionsTransactionIDOK() *GetTransactionsTransactionIDOK {

	return &GetTransactionsTransactionIDOK{}
}

// WithPayload adds the payload to the get transactions transaction Id o k response
func (o *GetTransactionsTransactionIDOK) WithPayload(payload *GetTransactionsTransactionIDOKBody) *GetTransactionsTransactionIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get transactions transaction Id o k response
func (o *GetTransactionsTransactionIDOK) SetPayload(payload *GetTransactionsTransactionIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTransactionsTransactionIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTransactionsTransactionIDBadRequestCode is the HTTP code returned for type GetTransactionsTransactionIDBadRequest
const GetTransactionsTransactionIDBadRequestCode int = 400

/*GetTransactionsTransactionIDBadRequest Request was malformed

swagger:response getTransactionsTransactionIdBadRequest
*/
type GetTransactionsTransactionIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTransactionsTransactionIDBadRequest creates GetTransactionsTransactionIDBadRequest with default headers values
func NewGetTransactionsTransactionIDBadRequest() *GetTransactionsTransactionIDBadRequest {

	return &GetTransactionsTransactionIDBadRequest{}
}

// WithPayload adds the payload to the get transactions transaction Id bad request response
func (o *GetTransactionsTransactionIDBadRequest) WithPayload(payload *models.Error) *GetTransactionsTransactionIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get transactions transaction Id bad request response
func (o *GetTransactionsTransactionIDBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTransactionsTransactionIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTransactionsTransactionIDNotFoundCode is the HTTP code returned for type GetTransactionsTransactionIDNotFound
const GetTransactionsTransactionIDNotFoundCode int = 404

/*GetTransactionsTransactionIDNotFound Address or id did not match any resource

swagger:response getTransactionsTransactionIdNotFound
*/
type GetTransactionsTransactionIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTransactionsTransactionIDNotFound creates GetTransactionsTransactionIDNotFound with default headers values
func NewGetTransactionsTransactionIDNotFound() *GetTransactionsTransactionIDNotFound {

	return &GetTransactionsTransactionIDNotFound{}
}

// WithPayload adds the payload to the get transactions transaction Id not found response
func (o *GetTransactionsTransactionIDNotFound) WithPayload(payload *models.Error) *GetTransactionsTransactionIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get transactions transaction Id not found response
func (o *GetTransactionsTransactionIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTransactionsTransactionIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTransactionsTransactionIDInternalServerErrorCode is the HTTP code returned for type GetTransactionsTransactionIDInternalServerError
const GetTransactionsTransactionIDInternalServerErrorCode int = 500

/*GetTransactionsTransactionIDInternalServerError Something went wrong within the validator

swagger:response getTransactionsTransactionIdInternalServerError
*/
type GetTransactionsTransactionIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTransactionsTransactionIDInternalServerError creates GetTransactionsTransactionIDInternalServerError with default headers values
func NewGetTransactionsTransactionIDInternalServerError() *GetTransactionsTransactionIDInternalServerError {

	return &GetTransactionsTransactionIDInternalServerError{}
}

// WithPayload adds the payload to the get transactions transaction Id internal server error response
func (o *GetTransactionsTransactionIDInternalServerError) WithPayload(payload *models.Error) *GetTransactionsTransactionIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get transactions transaction Id internal server error response
func (o *GetTransactionsTransactionIDInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTransactionsTransactionIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTransactionsTransactionIDServiceUnavailableCode is the HTTP code returned for type GetTransactionsTransactionIDServiceUnavailable
const GetTransactionsTransactionIDServiceUnavailableCode int = 503

/*GetTransactionsTransactionIDServiceUnavailable API is unable to reach the validator

swagger:response getTransactionsTransactionIdServiceUnavailable
*/
type GetTransactionsTransactionIDServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTransactionsTransactionIDServiceUnavailable creates GetTransactionsTransactionIDServiceUnavailable with default headers values
func NewGetTransactionsTransactionIDServiceUnavailable() *GetTransactionsTransactionIDServiceUnavailable {

	return &GetTransactionsTransactionIDServiceUnavailable{}
}

// WithPayload adds the payload to the get transactions transaction Id service unavailable response
func (o *GetTransactionsTransactionIDServiceUnavailable) WithPayload(payload *models.Error) *GetTransactionsTransactionIDServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get transactions transaction Id service unavailable response
func (o *GetTransactionsTransactionIDServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTransactionsTransactionIDServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
