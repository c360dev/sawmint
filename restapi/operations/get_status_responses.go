// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/c360dev/sawmint/models"
)

// GetStatusOKCode is the HTTP code returned for type GetStatusOK
const GetStatusOKCode int = 200

/*GetStatusOK Successfully retrieved status

swagger:response getStatusOK
*/
type GetStatusOK struct {

	/*
	  In: Body
	*/
	Payload *GetStatusOKBody `json:"body,omitempty"`
}

// NewGetStatusOK creates GetStatusOK with default headers values
func NewGetStatusOK() *GetStatusOK {

	return &GetStatusOK{}
}

// WithPayload adds the payload to the get status o k response
func (o *GetStatusOK) WithPayload(payload *GetStatusOKBody) *GetStatusOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get status o k response
func (o *GetStatusOK) SetPayload(payload *GetStatusOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStatusOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetStatusBadRequestCode is the HTTP code returned for type GetStatusBadRequest
const GetStatusBadRequestCode int = 400

/*GetStatusBadRequest Request was malformed

swagger:response getStatusBadRequest
*/
type GetStatusBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetStatusBadRequest creates GetStatusBadRequest with default headers values
func NewGetStatusBadRequest() *GetStatusBadRequest {

	return &GetStatusBadRequest{}
}

// WithPayload adds the payload to the get status bad request response
func (o *GetStatusBadRequest) WithPayload(payload *models.Error) *GetStatusBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get status bad request response
func (o *GetStatusBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStatusBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetStatusInternalServerErrorCode is the HTTP code returned for type GetStatusInternalServerError
const GetStatusInternalServerErrorCode int = 500

/*GetStatusInternalServerError Something went wrong within the validator

swagger:response getStatusInternalServerError
*/
type GetStatusInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetStatusInternalServerError creates GetStatusInternalServerError with default headers values
func NewGetStatusInternalServerError() *GetStatusInternalServerError {

	return &GetStatusInternalServerError{}
}

// WithPayload adds the payload to the get status internal server error response
func (o *GetStatusInternalServerError) WithPayload(payload *models.Error) *GetStatusInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get status internal server error response
func (o *GetStatusInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStatusInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetStatusServiceUnavailableCode is the HTTP code returned for type GetStatusServiceUnavailable
const GetStatusServiceUnavailableCode int = 503

/*GetStatusServiceUnavailable API is unable to reach the validator

swagger:response getStatusServiceUnavailable
*/
type GetStatusServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetStatusServiceUnavailable creates GetStatusServiceUnavailable with default headers values
func NewGetStatusServiceUnavailable() *GetStatusServiceUnavailable {

	return &GetStatusServiceUnavailable{}
}

// WithPayload adds the payload to the get status service unavailable response
func (o *GetStatusServiceUnavailable) WithPayload(payload *models.Error) *GetStatusServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get status service unavailable response
func (o *GetStatusServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStatusServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
