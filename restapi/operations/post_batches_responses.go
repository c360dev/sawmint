// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/c360dev/sawmint/models"
)

// PostBatchesAcceptedCode is the HTTP code returned for type PostBatchesAccepted
const PostBatchesAcceptedCode int = 202

/*PostBatchesAccepted Batches submitted for validation, but not yet committed

swagger:response postBatchesAccepted
*/
type PostBatchesAccepted struct {

	/*
	  In: Body
	*/
	Payload *PostBatchesAcceptedBody `json:"body,omitempty"`
}

// NewPostBatchesAccepted creates PostBatchesAccepted with default headers values
func NewPostBatchesAccepted() *PostBatchesAccepted {

	return &PostBatchesAccepted{}
}

// WithPayload adds the payload to the post batches accepted response
func (o *PostBatchesAccepted) WithPayload(payload *PostBatchesAcceptedBody) *PostBatchesAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post batches accepted response
func (o *PostBatchesAccepted) SetPayload(payload *PostBatchesAcceptedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostBatchesAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostBatchesBadRequestCode is the HTTP code returned for type PostBatchesBadRequest
const PostBatchesBadRequestCode int = 400

/*PostBatchesBadRequest Request was malformed

swagger:response postBatchesBadRequest
*/
type PostBatchesBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostBatchesBadRequest creates PostBatchesBadRequest with default headers values
func NewPostBatchesBadRequest() *PostBatchesBadRequest {

	return &PostBatchesBadRequest{}
}

// WithPayload adds the payload to the post batches bad request response
func (o *PostBatchesBadRequest) WithPayload(payload *models.Error) *PostBatchesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post batches bad request response
func (o *PostBatchesBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostBatchesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostBatchesTooManyRequestsCode is the HTTP code returned for type PostBatchesTooManyRequests
const PostBatchesTooManyRequestsCode int = 429

/*PostBatchesTooManyRequests Too many requests have been made to process batches

swagger:response postBatchesTooManyRequests
*/
type PostBatchesTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostBatchesTooManyRequests creates PostBatchesTooManyRequests with default headers values
func NewPostBatchesTooManyRequests() *PostBatchesTooManyRequests {

	return &PostBatchesTooManyRequests{}
}

// WithPayload adds the payload to the post batches too many requests response
func (o *PostBatchesTooManyRequests) WithPayload(payload *models.Error) *PostBatchesTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post batches too many requests response
func (o *PostBatchesTooManyRequests) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostBatchesTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostBatchesInternalServerErrorCode is the HTTP code returned for type PostBatchesInternalServerError
const PostBatchesInternalServerErrorCode int = 500

/*PostBatchesInternalServerError Something went wrong within the validator

swagger:response postBatchesInternalServerError
*/
type PostBatchesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostBatchesInternalServerError creates PostBatchesInternalServerError with default headers values
func NewPostBatchesInternalServerError() *PostBatchesInternalServerError {

	return &PostBatchesInternalServerError{}
}

// WithPayload adds the payload to the post batches internal server error response
func (o *PostBatchesInternalServerError) WithPayload(payload *models.Error) *PostBatchesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post batches internal server error response
func (o *PostBatchesInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostBatchesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostBatchesServiceUnavailableCode is the HTTP code returned for type PostBatchesServiceUnavailable
const PostBatchesServiceUnavailableCode int = 503

/*PostBatchesServiceUnavailable API is unable to reach the validator

swagger:response postBatchesServiceUnavailable
*/
type PostBatchesServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostBatchesServiceUnavailable creates PostBatchesServiceUnavailable with default headers values
func NewPostBatchesServiceUnavailable() *PostBatchesServiceUnavailable {

	return &PostBatchesServiceUnavailable{}
}

// WithPayload adds the payload to the post batches service unavailable response
func (o *PostBatchesServiceUnavailable) WithPayload(payload *models.Error) *PostBatchesServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post batches service unavailable response
func (o *PostBatchesServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostBatchesServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
