// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/faddat/sawmint/models"
)

// GetTransactionsOKCode is the HTTP code returned for type GetTransactionsOK
const GetTransactionsOKCode int = 200

/*GetTransactionsOK Successfully retrieved transactions

swagger:response getTransactionsOK
*/
type GetTransactionsOK struct {

	/*
	  In: Body
	*/
	Payload *GetTransactionsOKBody `json:"body,omitempty"`
}

// NewGetTransactionsOK creates GetTransactionsOK with default headers values
func NewGetTransactionsOK() *GetTransactionsOK {

	return &GetTransactionsOK{}
}

// WithPayload adds the payload to the get transactions o k response
func (o *GetTransactionsOK) WithPayload(payload *GetTransactionsOKBody) *GetTransactionsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get transactions o k response
func (o *GetTransactionsOK) SetPayload(payload *GetTransactionsOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTransactionsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTransactionsBadRequestCode is the HTTP code returned for type GetTransactionsBadRequest
const GetTransactionsBadRequestCode int = 400

/*GetTransactionsBadRequest Request was malformed

swagger:response getTransactionsBadRequest
*/
type GetTransactionsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTransactionsBadRequest creates GetTransactionsBadRequest with default headers values
func NewGetTransactionsBadRequest() *GetTransactionsBadRequest {

	return &GetTransactionsBadRequest{}
}

// WithPayload adds the payload to the get transactions bad request response
func (o *GetTransactionsBadRequest) WithPayload(payload *models.Error) *GetTransactionsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get transactions bad request response
func (o *GetTransactionsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTransactionsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTransactionsInternalServerErrorCode is the HTTP code returned for type GetTransactionsInternalServerError
const GetTransactionsInternalServerErrorCode int = 500

/*GetTransactionsInternalServerError Something went wrong within the validator

swagger:response getTransactionsInternalServerError
*/
type GetTransactionsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTransactionsInternalServerError creates GetTransactionsInternalServerError with default headers values
func NewGetTransactionsInternalServerError() *GetTransactionsInternalServerError {

	return &GetTransactionsInternalServerError{}
}

// WithPayload adds the payload to the get transactions internal server error response
func (o *GetTransactionsInternalServerError) WithPayload(payload *models.Error) *GetTransactionsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get transactions internal server error response
func (o *GetTransactionsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTransactionsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTransactionsServiceUnavailableCode is the HTTP code returned for type GetTransactionsServiceUnavailable
const GetTransactionsServiceUnavailableCode int = 503

/*GetTransactionsServiceUnavailable API is unable to reach the validator

swagger:response getTransactionsServiceUnavailable
*/
type GetTransactionsServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTransactionsServiceUnavailable creates GetTransactionsServiceUnavailable with default headers values
func NewGetTransactionsServiceUnavailable() *GetTransactionsServiceUnavailable {

	return &GetTransactionsServiceUnavailable{}
}

// WithPayload adds the payload to the get transactions service unavailable response
func (o *GetTransactionsServiceUnavailable) WithPayload(payload *models.Error) *GetTransactionsServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get transactions service unavailable response
func (o *GetTransactionsServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTransactionsServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
