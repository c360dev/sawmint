// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/c360dev/sawmint/models"
)

// GetBatchesBatchIDOKCode is the HTTP code returned for type GetBatchesBatchIDOK
const GetBatchesBatchIDOKCode int = 200

/*GetBatchesBatchIDOK Successfully retrieved batch

swagger:response getBatchesBatchIdOK
*/
type GetBatchesBatchIDOK struct {

	/*
	  In: Body
	*/
	Payload *GetBatchesBatchIDOKBody `json:"body,omitempty"`
}

// NewGetBatchesBatchIDOK creates GetBatchesBatchIDOK with default headers values
func NewGetBatchesBatchIDOK() *GetBatchesBatchIDOK {

	return &GetBatchesBatchIDOK{}
}

// WithPayload adds the payload to the get batches batch Id o k response
func (o *GetBatchesBatchIDOK) WithPayload(payload *GetBatchesBatchIDOKBody) *GetBatchesBatchIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get batches batch Id o k response
func (o *GetBatchesBatchIDOK) SetPayload(payload *GetBatchesBatchIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBatchesBatchIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetBatchesBatchIDBadRequestCode is the HTTP code returned for type GetBatchesBatchIDBadRequest
const GetBatchesBatchIDBadRequestCode int = 400

/*GetBatchesBatchIDBadRequest Request was malformed

swagger:response getBatchesBatchIdBadRequest
*/
type GetBatchesBatchIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetBatchesBatchIDBadRequest creates GetBatchesBatchIDBadRequest with default headers values
func NewGetBatchesBatchIDBadRequest() *GetBatchesBatchIDBadRequest {

	return &GetBatchesBatchIDBadRequest{}
}

// WithPayload adds the payload to the get batches batch Id bad request response
func (o *GetBatchesBatchIDBadRequest) WithPayload(payload *models.Error) *GetBatchesBatchIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get batches batch Id bad request response
func (o *GetBatchesBatchIDBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBatchesBatchIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetBatchesBatchIDNotFoundCode is the HTTP code returned for type GetBatchesBatchIDNotFound
const GetBatchesBatchIDNotFoundCode int = 404

/*GetBatchesBatchIDNotFound Address or id did not match any resource

swagger:response getBatchesBatchIdNotFound
*/
type GetBatchesBatchIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetBatchesBatchIDNotFound creates GetBatchesBatchIDNotFound with default headers values
func NewGetBatchesBatchIDNotFound() *GetBatchesBatchIDNotFound {

	return &GetBatchesBatchIDNotFound{}
}

// WithPayload adds the payload to the get batches batch Id not found response
func (o *GetBatchesBatchIDNotFound) WithPayload(payload *models.Error) *GetBatchesBatchIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get batches batch Id not found response
func (o *GetBatchesBatchIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBatchesBatchIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetBatchesBatchIDInternalServerErrorCode is the HTTP code returned for type GetBatchesBatchIDInternalServerError
const GetBatchesBatchIDInternalServerErrorCode int = 500

/*GetBatchesBatchIDInternalServerError Something went wrong within the validator

swagger:response getBatchesBatchIdInternalServerError
*/
type GetBatchesBatchIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetBatchesBatchIDInternalServerError creates GetBatchesBatchIDInternalServerError with default headers values
func NewGetBatchesBatchIDInternalServerError() *GetBatchesBatchIDInternalServerError {

	return &GetBatchesBatchIDInternalServerError{}
}

// WithPayload adds the payload to the get batches batch Id internal server error response
func (o *GetBatchesBatchIDInternalServerError) WithPayload(payload *models.Error) *GetBatchesBatchIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get batches batch Id internal server error response
func (o *GetBatchesBatchIDInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBatchesBatchIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetBatchesBatchIDServiceUnavailableCode is the HTTP code returned for type GetBatchesBatchIDServiceUnavailable
const GetBatchesBatchIDServiceUnavailableCode int = 503

/*GetBatchesBatchIDServiceUnavailable API is unable to reach the validator

swagger:response getBatchesBatchIdServiceUnavailable
*/
type GetBatchesBatchIDServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetBatchesBatchIDServiceUnavailable creates GetBatchesBatchIDServiceUnavailable with default headers values
func NewGetBatchesBatchIDServiceUnavailable() *GetBatchesBatchIDServiceUnavailable {

	return &GetBatchesBatchIDServiceUnavailable{}
}

// WithPayload adds the payload to the get batches batch Id service unavailable response
func (o *GetBatchesBatchIDServiceUnavailable) WithPayload(payload *models.Error) *GetBatchesBatchIDServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get batches batch Id service unavailable response
func (o *GetBatchesBatchIDServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBatchesBatchIDServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
