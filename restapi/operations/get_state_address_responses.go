// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/c360dev/sawmint/models"
)

// GetStateAddressOKCode is the HTTP code returned for type GetStateAddressOK
const GetStateAddressOKCode int = 200

/*GetStateAddressOK Successfully fetched leaves

swagger:response getStateAddressOK
*/
type GetStateAddressOK struct {

	/*
	  In: Body
	*/
	Payload *GetStateAddressOKBody `json:"body,omitempty"`
}

// NewGetStateAddressOK creates GetStateAddressOK with default headers values
func NewGetStateAddressOK() *GetStateAddressOK {

	return &GetStateAddressOK{}
}

// WithPayload adds the payload to the get state address o k response
func (o *GetStateAddressOK) WithPayload(payload *GetStateAddressOKBody) *GetStateAddressOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get state address o k response
func (o *GetStateAddressOK) SetPayload(payload *GetStateAddressOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStateAddressOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetStateAddressBadRequestCode is the HTTP code returned for type GetStateAddressBadRequest
const GetStateAddressBadRequestCode int = 400

/*GetStateAddressBadRequest Request was malformed

swagger:response getStateAddressBadRequest
*/
type GetStateAddressBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetStateAddressBadRequest creates GetStateAddressBadRequest with default headers values
func NewGetStateAddressBadRequest() *GetStateAddressBadRequest {

	return &GetStateAddressBadRequest{}
}

// WithPayload adds the payload to the get state address bad request response
func (o *GetStateAddressBadRequest) WithPayload(payload *models.Error) *GetStateAddressBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get state address bad request response
func (o *GetStateAddressBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStateAddressBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetStateAddressNotFoundCode is the HTTP code returned for type GetStateAddressNotFound
const GetStateAddressNotFoundCode int = 404

/*GetStateAddressNotFound Address or id did not match any resource

swagger:response getStateAddressNotFound
*/
type GetStateAddressNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetStateAddressNotFound creates GetStateAddressNotFound with default headers values
func NewGetStateAddressNotFound() *GetStateAddressNotFound {

	return &GetStateAddressNotFound{}
}

// WithPayload adds the payload to the get state address not found response
func (o *GetStateAddressNotFound) WithPayload(payload *models.Error) *GetStateAddressNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get state address not found response
func (o *GetStateAddressNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStateAddressNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetStateAddressInternalServerErrorCode is the HTTP code returned for type GetStateAddressInternalServerError
const GetStateAddressInternalServerErrorCode int = 500

/*GetStateAddressInternalServerError Something went wrong within the validator

swagger:response getStateAddressInternalServerError
*/
type GetStateAddressInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetStateAddressInternalServerError creates GetStateAddressInternalServerError with default headers values
func NewGetStateAddressInternalServerError() *GetStateAddressInternalServerError {

	return &GetStateAddressInternalServerError{}
}

// WithPayload adds the payload to the get state address internal server error response
func (o *GetStateAddressInternalServerError) WithPayload(payload *models.Error) *GetStateAddressInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get state address internal server error response
func (o *GetStateAddressInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStateAddressInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetStateAddressServiceUnavailableCode is the HTTP code returned for type GetStateAddressServiceUnavailable
const GetStateAddressServiceUnavailableCode int = 503

/*GetStateAddressServiceUnavailable API is unable to reach the validator

swagger:response getStateAddressServiceUnavailable
*/
type GetStateAddressServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetStateAddressServiceUnavailable creates GetStateAddressServiceUnavailable with default headers values
func NewGetStateAddressServiceUnavailable() *GetStateAddressServiceUnavailable {

	return &GetStateAddressServiceUnavailable{}
}

// WithPayload adds the payload to the get state address service unavailable response
func (o *GetStateAddressServiceUnavailable) WithPayload(payload *models.Error) *GetStateAddressServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get state address service unavailable response
func (o *GetStateAddressServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStateAddressServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
